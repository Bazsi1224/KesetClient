[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://dt4dmp6joian6"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_egykd"]
expanded_output_ports = [0]
function = 2

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_fdgwe"]
expanded_output_ports = [0]
function = 1

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_eiwl0"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dxbwj"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_7jlts"]
expanded_output_ports = [0]
function = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4fxlv"]
default_input_values = [0, 0.0, 1, 300.0]
operator = 1

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_h8st0"]
function = 12

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_g4y70"]
constant = Color(1, 0, 1, 1)

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_3m6ee"]
expanded_output_ports = [0]
function = 2

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_7i2sd"]
default_input_values = [0, 0.0, 1, 0.1, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_pxcym"]
parameter_name = "PlayerColor"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 PlayerColor : source_color;



void fragment() {
// ColorConstant:6
	vec4 n_out6p0 = vec4(1.000000, 0.000000, 1.000000, 1.000000);


	vec3 n_out7p0;
// ColorFunc:7
	{
		vec3 c = vec3(n_out6p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out7p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}
	float n_out7p1 = n_out7p0.r;


// Input:2
	vec4 n_out2p0 = COLOR;


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = vec3(n_out2p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out3p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}
	float n_out3p1 = n_out3p0.r;
	float n_out3p2 = n_out3p0.g;
	float n_out3p3 = n_out3p0.b;


// FloatOp:4
	float n_out4p0 = n_out7p1 - n_out3p1;


// FloatFunc:5
	float n_out5p0 = abs(n_out4p0);


// ColorParameter:9
	vec4 n_out9p0 = PlayerColor;


	vec3 n_out10p0;
// ColorFunc:10
	{
		vec3 c = vec3(n_out9p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out10p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}
	float n_out10p1 = n_out10p0.r;


// VectorCompose:12
	vec3 n_out12p0 = vec3(n_out10p1, n_out3p2, n_out3p3);


	vec3 n_out11p0;
// ColorFunc:11
	{
		vec3 c = n_out12p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out11p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


	vec3 n_out8p0;
// If:8
	float n_in8p1 = 0.10000;
	float n_in8p2 = 0.00001;
	if(abs(n_out5p0 - n_in8p1) < n_in8p2)
	{
		n_out8p0 = vec3(n_out2p0.xyz);
	}
	else if(n_out5p0 < n_in8p1)
	{
		n_out8p0 = n_out11p0;
	}
	else
	{
		n_out8p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out8p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(500, 240)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_dxbwj")
nodes/fragment/2/position = Vector2(-960, 360)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_7jlts")
nodes/fragment/3/position = Vector2(-560, 220)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_4fxlv")
nodes/fragment/4/position = Vector2(-240, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_h8st0")
nodes/fragment/5/position = Vector2(-20, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorConstant_g4y70")
nodes/fragment/6/position = Vector2(-760, 20)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorFunc_3m6ee")
nodes/fragment/7/position = Vector2(-580, 20)
nodes/fragment/8/node = SubResource("VisualShaderNodeIf_7i2sd")
nodes/fragment/8/position = Vector2(240, 240)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorParameter_pxcym")
nodes/fragment/9/position = Vector2(-940, 480)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorFunc_egykd")
nodes/fragment/10/position = Vector2(-580, 540)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorFunc_fdgwe")
nodes/fragment/11/position = Vector2(-80, 440)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorCompose_eiwl0")
nodes/fragment/12/position = Vector2(-280, 440)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 0, 0, 5, 0, 8, 0, 7, 1, 4, 0, 3, 1, 4, 1, 2, 0, 8, 3, 2, 0, 8, 4, 9, 0, 10, 0, 11, 0, 8, 5, 12, 0, 11, 0, 3, 2, 12, 1, 3, 3, 12, 2, 10, 1, 12, 0)
